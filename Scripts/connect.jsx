// Thanks to Wolfgang Reszel (ai-js@rumborak.de), whose WR-removeDuplicates script I referenced in making this.$.writeln("Starting");threshold = 1;if (documents.length < 1) {	alert("No document is open");}var theItems=selection;if (theItems.length < 1) {	alert("No selection.");}for (var i = 0 ; i < theItems.length; i++){    $.writeln("Line: " + i);	if (!elligibleItem(theItems[i])) continue;	var matchFound = true;	while (matchFound) {		matchFound = false;		for (var j = 0 ; j < theItems.length; j++){           // $.writeln(""+i+" "+j);             if (i == j) continue;			if (!elligibleItem(theItems[j])) continue;			if (canConnect(theItems[i], theItems[j])){                $.writeln("append " + i + " and " + j);				append(theItems[i], theItems[j]);				theItems[j].name = "deleteme";				matchFound = true;			}		}	}    $.writeln("/Line: " + i);}$.writeln("Removing Lines");  for (var i = 0 ; i < theItems.length; i++)  {    if(theItems[i].name=="deleteme") {theItems[i].remove();}  }$.writeln("done");function canConnect(pathItem1, pathItem2) {    var p1z = pathItem1.pathPoints[pathItem1.pathPoints.length - 1];    var p2a = pathItem2.pathPoints[0];    var deltaX = p1z.anchor[0] - p2a.anchor[0];    var deltaY = p1z.anchor[1] - p2a.anchor[1];    var dist = Math.sqrt(deltaX * deltaX + deltaY * deltaY);    return dist < threshold;}function elligibleItem(theItem) {    //theItem.parent.clipped != true && && !theItem.parent.locked	return theItem.typename == "PathItem" && !theItem.closed && !theItem.locked  && !theItem.layer.locked && theItem.name != "deleteme";}function append(targetPathItem, newPathItem){    $.writeln("append");  var targetPoints = targetPathItem.pathPoints;  var newPoints = newPathItem.pathPoints;  for(var i = 0; i < newPoints.length && i < 1000; i++){      $.writeln("" + i + "/" + newPoints.length);    var p = targetPoints.add();    p.anchor         = newPoints[i].anchor;    p.rightDirection = newPoints[i].rightDirection;    p.leftDirection  = newPoints[i].leftDirection;    p.pointType      = newPoints[i].pointType;  }$.writeln("/append");  }